{"version":3,"sources":["../../src/graphql/resolvers.js"],"names":["Query","books","obj","args","models","sync","findAll","where","films","multimedia","Promise","all","resMultimedia","Mutation","addBook","title","author","create","addFilm","director","Multimedia","__resolveType","context","info","dataValues","hasOwnProperty"],"mappings":";;;;;;AAAA;;;;;;;;;;kBAEe;AACbA,SAAO;AACLC;AAAA,yEAAO,iBAAOC,GAAP,EAAYC,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACCC,gBAAOH,KAAP,CAAaI,IAAb,EADD;;AAAA;AAAA;AAAA,uBAEQD,gBAAOH,KAAP,CAAaK,OAAb,CAAqB;AAChCC,yBAAOJ;AADyB,iBAArB,CAFR;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;;AAAA;AAAA,OADK;AAOLK;AAAA,0EAAO,kBAAON,GAAP,EAAYC,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACCC,gBAAOI,KAAP,CAAaH,IAAb,EADD;;AAAA;AAAA;AAAA,uBAEQD,gBAAOI,KAAP,CAAaF,OAAb,CAAqB;AAChCC,yBAAOJ;AADyB,iBAArB,CAFR;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAPK;AAaLM;AAAA,0EAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACJC,QAAQC,GAAR,CAAY,CAACP,gBAAOH,KAAP,CAAaI,IAAb,EAAD,EAAsBD,gBAAOI,KAAP,CAAaH,IAAb,EAAtB,CAAZ,CADI;;AAAA;AAAA;AAAA,uBAEkBK,QAAQC,GAAR,CAAY,CAACP,gBAAOH,KAAP,CAAaK,OAAb,EAAD,EAAyBF,gBAAOI,KAAP,CAAaF,OAAb,EAAzB,CAAZ,CAFlB;;AAAA;AAEJM,6BAFI;AAAA,+EAGCA,cAAc,CAAd,CAHD,sBAGsBA,cAAc,CAAd,CAHtB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAZ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAbK,GADM;AAoBbC,YAAU;AACRC;AAAA,0EAAS,kBAAOZ,GAAP;AAAA,YAAca,KAAd,SAAcA,KAAd;AAAA,YAAqBC,MAArB,SAAqBA,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAECZ,gBAAOH,KAAP,CAAagB,MAAb,CAAoB;AACxBF,8BADwB;AAExBC;AAFwB,iBAApB,CAFD;;AAAA;AAAA,kDAME,cANF;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAT;;AAAA;AAAA;AAAA;;AAAA;AAAA,OADQ;AAYRE;AAAA,0EAAS,kBAAOhB,GAAP;AAAA,YAAca,KAAd,SAAcA,KAAd;AAAA,YAAqBI,QAArB,SAAqBA,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAECf,gBAAOI,KAAP,CAAaS,MAAb,CAAoB;AACxBF,8BADwB;AAExBI;AAFwB,iBAApB,CAFD;;AAAA;AAAA,kDAME,cANF;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAT;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAZQ,GApBG;AA4CbC,cAAY;AACVC,iBADU,yBACInB,GADJ,EACSoB,OADT,EACkBC,IADlB,EACwB;AAChC,aAAOrB,IAAIsB,UAAJ,CAAeC,cAAf,CAA8B,QAA9B,IAA0C,MAA1C,GAAmD,MAA1D;AACD;AAHS;AA5CC,C","file":"resolvers.js","sourcesContent":["import models from '../models/index';\n\nexport default {\n  Query: {\n    books: async (obj, args) => {\n      await models.books.sync();\n      return await models.books.findAll({\n        where: args\n      });\n    },\n    films: async (obj, args) => {\n      await models.films.sync();\n      return await models.films.findAll({\n        where: args\n      });\n    },\n    multimedia: async () => {\n      await Promise.all([models.books.sync(), models.films.sync()]);\n      const resMultimedia = await Promise.all([models.books.findAll(), models.films.findAll()]);\n      return [...resMultimedia[0], ...resMultimedia[1]];\n    },\n  },\n  Mutation: {\n    addBook: async (obj, { title, author }) => {\n      try {\n        await models.books.create({\n          title,\n          author\n        });\n        return 'Book created'\n      } catch (err) {\n        return `Error during book creation: ${err}`\n      }\n    },\n    addFilm: async (obj, { title, director }) => {\n      try {\n        await models.films.create({\n          title,\n          director\n        });\n        return 'Film created'\n      } catch (err) {\n        return `Error during film creation: ${err}`\n      }\n    }\n  },\n  Multimedia: {\n    __resolveType(obj, context, info) {\n      return obj.dataValues.hasOwnProperty('author') ? 'Book' : 'Film';\n    },\n  },\n};\n"]}
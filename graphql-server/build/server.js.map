{"version":3,"sources":["../src/server.js"],"names":["app","get","dotenv","config","PORT","process","env","SERVER_PORT","DEFAULT_CONF","use","bodyParser","json","schema","graphqlSchema","NODE_ENV","endpointURL","console","log","os","hostname","listen"],"mappings":";;AAAA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;;;AAGA,IAAMA,MAAM,wBAAZ;;AAEA,IAAIA,IAAIC,GAAJ,CAAQ,KAAR,MAAmB,aAAvB,EAAsC;AACpC;AACAC,mBAAOC,MAAP;AACD;;AAED,IAAMC,OAAOC,QAAQC,GAAR,CAAYC,WAAZ,IAA2BC,kBAAaD,WAArD;;AAEAP,IAAIS,GAAJ,CAAQ,sBAAO,UAAP,CAAR;;AAEA;AACAT,IAAIS,GAAJ,CAAQ,UAAR,EAAoB,qBAApB,EAA4BC,qBAAWC,IAAX,EAA5B,EAA+C,yCAAe,EAAEC,QAAQC,eAAV,EAAf,CAA/C;;AAEA,IAAIR,QAAQC,GAAR,CAAYQ,QAAZ,KAAyB,aAA7B,EAA4C;AAC1Cd,MAAIC,GAAJ,CAAQ,WAAR,EAAqB,0CAAgB,EAAEc,aAAa,UAAf,EAAhB,CAArB;AACD;;AAEDC,QAAQC,GAAR,CAAYjB,IAAIC,GAAJ,CAAQ,KAAR,CAAZ;AACAe,QAAQC,GAAR,gCAAyCC,aAAGC,QAAH,EAAzC,SAA0Df,IAA1D;;AAEAJ,IAAIoB,MAAJ,CAAWhB,IAAX","file":"server.js","sourcesContent":["import 'babel-polyfill';\nimport os from 'os';\nimport dotenv from 'dotenv';\nimport morgan from 'morgan';\nimport express from 'express';\nimport bodyParser from 'body-parser';\nimport cors from 'cors';\nimport { graphqlExpress, graphiqlExpress } from 'apollo-server-express';\nimport graphqlSchema from './graphql/index';\nimport DEFAULT_CONF from './configs/default';\n\n\nconst app = express();\n\nif (app.get('env') === 'development') {\n  // Configure env for development\n  dotenv.config();\n}\n\nconst PORT = process.env.SERVER_PORT ||Â DEFAULT_CONF.SERVER_PORT;\n\napp.use(morgan('combined'));\n\n// bodyParser is needed just for POST.\napp.use('/graphql', cors(), bodyParser.json(), graphqlExpress({ schema: graphqlSchema }));\n\nif (process.env.NODE_ENV === 'development') {\n  app.get('/graphiql', graphiqlExpress({ endpointURL: '/graphql' }));\n}\n\nconsole.log(app.get('env'));\nconsole.log(`Server running at: http://${os.hostname()}:${PORT}`);\n\napp.listen(PORT);\n"]}